service: student-management-rest-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-southeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:ap-southeast-1:*:*

resources:
  Resources:
    StudentsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'students'
    ManagersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'managers'

functions:
  registerStudent:
    handler: src/handler/auth/register.register
    events:
      - http:
          path: auth/register
          method: post
          cors: true
  login:
    handler: src/handler/auth/login.login
    events:
      - http:
          path: auth/login
          method: post
          cors: true
  changePassword:
    handler: src/handler/auth/changePassword.changePassword
    events:
      - http:
          path: auth/changePassword
          method: post
          cors: true
  listStudent:
    handler: src/handler/students/listStudent.listStudent
    events:
      - http:
          path: students
          method: get
          cors: true
    timeout: 20
  getStudent:
    handler: src/handler/students/getStudent.getStudent
    events:
      - http:
          path: students/{id}
          method: get
          cors: true
  updateStudent:
    handler: src/handler/students/updateStudent.updateStudent
    events:
      - http:
          path: students/{id}
          method: put
          cors: true
  deleteStudent:
    handler: src/handler/students/deleteStudent.deleteStudent
    events:
      - http:
          path: students/{id}
          method: delete
          cors: true
  createManager:
    handler: src/handler/managers/createManager.createManager
    events:
      - http:
          path: managers
          method: post
          cors: true
  listManager:
    handler: src/handler/managers/listManager.listManager
    events:
      - http:
          path: managers
          method: get
          cors: true
  getManager:
    handler: src/handler/managers/getManager.getManager
    events:
      - http:
          path: managers/{id}
          method: get
          cors: true
  updateManager:
    handler: src/handler/managers/updateManager.updateManager
    events:
      - http:
          path: managers/{id}
          method: put
          cors: true
  deleteManager:
    handler: src/handler/managers/deleteManager.deleteManager
    events:
      - http:
          path: managers/{id}
          method: delete
          cors: true